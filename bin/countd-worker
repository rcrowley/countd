#!/usr/bin/env python

from countd import commitlog, message, permanent
import optfunc
from time import sleep
import sys

@optfunc.main
def main():

    cl = commitlog.CommitLog(commitlog.CommitLog.READ)

    try:
        while 1:

            # Wait a while if there are no dirty commit logs available.
            if not cl.choose():
                sys.stderr.write(
                    "[countd-commitlog] waiting for commit logs\n")
                sleep(5)
                continue

            # Group updates for the same keyspace
            keyspaces = {}
            for m in cl.file:
                if 0 == m.increment:
                    continue
                if m.keyspace not in keyspaces:
                    keyspaces[m.keyspace] = []
                keyspaces[m.keyspace].append((m.key, m.increment))

            # Write the updates to permanent storage
            for k, l in keyspaces.iteritems():
                keyspace = permanent.Keyspace(
					k, permanent.Keyspace.WRITE,
                    permanent.Index(k, permanent.Index.WRITE),
                    permanent.Deltas(k, permanent.Deltas.WRITE)
				)
                for k, i in l:
                    keyspace.update(k, i)
                del keyspace # Force destructor to be called now

            # Mark this file clean so it can be written again.
            cl.file.clean()
            sys.stderr.write("[countd-commitlog] cleaned\n")

    except KeyboardInterrupt:
        pass
